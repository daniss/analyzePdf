"""Initial database setup

Revision ID: 83e4b81e4a3c
Revises: 
Create Date: 2025-07-28 12:07:23.074896

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '83e4b81e4a3c'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('compliance_settings',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('setting_category', sa.String(length=50), nullable=False),
    sa.Column('setting_name', sa.String(length=100), nullable=False),
    sa.Column('setting_value', sa.JSON(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('effective_from', sa.DateTime(timezone=True), nullable=True),
    sa.Column('effective_until', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('setting_category', 'setting_name', name='uq_compliance_settings_category_name')
    )
    op.create_table('cost_summaries',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('period_type', sa.String(), nullable=False),
    sa.Column('period_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('total_invoices_processed', sa.Integer(), nullable=True),
    sa.Column('total_tokens_used', sa.Integer(), nullable=True),
    sa.Column('total_cost_usd', sa.Float(), nullable=True),
    sa.Column('total_cost_eur', sa.Float(), nullable=True),
    sa.Column('groq_cost_eur', sa.Float(), nullable=True),
    sa.Column('single_invoice_cost', sa.Float(), nullable=True),
    sa.Column('batch_processing_cost', sa.Float(), nullable=True),
    sa.Column('active_users_count', sa.Integer(), nullable=True),
    sa.Column('new_users_count', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('plan_comptable_general',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('account_code', sa.String(length=10), nullable=False),
    sa.Column('account_name', sa.String(length=200), nullable=False),
    sa.Column('account_category', sa.String(length=50), nullable=False),
    sa.Column('account_subcategory', sa.String(length=100), nullable=True),
    sa.Column('vat_applicable', sa.Boolean(), nullable=False),
    sa.Column('default_vat_rate', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('keywords', sa.JSON(), nullable=True),
    sa.Column('sage_mapping', sa.String(length=20), nullable=True),
    sa.Column('ebp_mapping', sa.String(length=20), nullable=True),
    sa.Column('ciel_mapping', sa.String(length=20), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('account_code')
    )
    op.create_table('siret_compliance_guidance',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('validation_status', sa.String(), nullable=False),
    sa.Column('scenario_name', sa.String(length=100), nullable=False),
    sa.Column('legal_implications', sa.Text(), nullable=False),
    sa.Column('tax_deduction_risk', sa.String(), nullable=False),
    sa.Column('audit_risk_level', sa.String(), nullable=False),
    sa.Column('recommended_actions', sa.JSON(), nullable=False),
    sa.Column('user_options', sa.JSON(), nullable=False),
    sa.Column('documentation_requirements', sa.JSON(), nullable=False),
    sa.Column('error_message_fr', sa.Text(), nullable=False),
    sa.Column('warning_message_fr', sa.Text(), nullable=True),
    sa.Column('guidance_text_fr', sa.Text(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('siret_validation_settings',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('organization_id', sa.UUID(), nullable=True),
    sa.Column('enable_auto_correction', sa.Boolean(), nullable=True),
    sa.Column('auto_retry_count', sa.Integer(), nullable=True),
    sa.Column('auto_clean_formatting', sa.Boolean(), nullable=True),
    sa.Column('block_invalid_siret_export', sa.Boolean(), nullable=True),
    sa.Column('require_manual_override', sa.Boolean(), nullable=True),
    sa.Column('allow_foreign_supplier_bypass', sa.Boolean(), nullable=True),
    sa.Column('name_similarity_threshold', sa.Integer(), nullable=True),
    sa.Column('require_exact_name_match', sa.Boolean(), nullable=True),
    sa.Column('max_acceptable_risk', sa.String(), nullable=True),
    sa.Column('require_justification_for_overrides', sa.Boolean(), nullable=True),
    sa.Column('enable_liability_warnings', sa.Boolean(), nullable=True),
    sa.Column('require_warning_acknowledgment', sa.Boolean(), nullable=True),
    sa.Column('track_all_decisions', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tva_exemption_rules',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('exemption_code', sa.String(length=20), nullable=False),
    sa.Column('exemption_name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('legal_reference', sa.String(length=200), nullable=False),
    sa.Column('cgi_article', sa.String(length=50), nullable=True),
    sa.Column('eu_directive', sa.String(length=100), nullable=True),
    sa.Column('eligibility_conditions', sa.JSON(), nullable=False),
    sa.Column('required_documents', sa.JSON(), nullable=True),
    sa.Column('validation_rules', sa.JSON(), nullable=False),
    sa.Column('applicable_sectors', sa.JSON(), nullable=True),
    sa.Column('applicable_categories', sa.JSON(), nullable=True),
    sa.Column('geographic_scope', sa.String(length=50), nullable=True),
    sa.Column('automatic_detection', sa.Boolean(), nullable=False),
    sa.Column('detection_keywords', sa.JSON(), nullable=True),
    sa.Column('confidence_threshold', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('usage_count', sa.Integer(), nullable=False),
    sa.Column('success_rate', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('last_used', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('effective_from', sa.Date(), nullable=True),
    sa.Column('effective_until', sa.Date(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('exemption_code')
    )
    op.create_table('tva_product_categories',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('category_code', sa.String(length=50), nullable=False),
    sa.Column('category_name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('standard_tva_rate', sa.Numeric(precision=5, scale=2), nullable=False),
    sa.Column('rate_justification', sa.Text(), nullable=True),
    sa.Column('keywords', sa.JSON(), nullable=True),
    sa.Column('naf_codes', sa.JSON(), nullable=True),
    sa.Column('product_codes', sa.JSON(), nullable=True),
    sa.Column('parent_category_id', sa.UUID(), nullable=True),
    sa.Column('category_level', sa.Integer(), nullable=False),
    sa.Column('legal_reference', sa.String(length=200), nullable=True),
    sa.Column('effective_from', sa.Date(), nullable=True),
    sa.Column('effective_until', sa.Date(), nullable=True),
    sa.Column('has_special_conditions', sa.Boolean(), nullable=False),
    sa.Column('special_conditions', sa.JSON(), nullable=True),
    sa.Column('exemption_conditions', sa.JSON(), nullable=True),
    sa.Column('usage_count', sa.Integer(), nullable=False),
    sa.Column('last_used', sa.DateTime(timezone=True), nullable=True),
    sa.Column('confidence_score', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['parent_category_id'], ['tva_product_categories.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('category_code')
    )
    op.create_index('idx_tva_category_active', 'tva_product_categories', ['is_active'], unique=False)
    op.create_index('idx_tva_category_level', 'tva_product_categories', ['category_level'], unique=False)
    op.create_index('idx_tva_category_rate', 'tva_product_categories', ['standard_tva_rate'], unique=False)
    op.create_table('tva_rate_history',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('rate_type', sa.String(length=50), nullable=False),
    sa.Column('rate_value', sa.Numeric(precision=5, scale=2), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('legal_reference', sa.String(length=200), nullable=True),
    sa.Column('decree_number', sa.String(length=100), nullable=True),
    sa.Column('effective_from', sa.Date(), nullable=False),
    sa.Column('effective_until', sa.Date(), nullable=True),
    sa.Column('change_reason', sa.Text(), nullable=True),
    sa.Column('affected_categories', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_tva_rate_effective', 'tva_rate_history', ['effective_from', 'effective_until'], unique=False)
    op.create_index('idx_tva_rate_type', 'tva_rate_history', ['rate_type'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('company_name', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('validation_error_patterns',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('error_type', sa.String(length=50), nullable=False),
    sa.Column('error_subtype', sa.String(length=100), nullable=True),
    sa.Column('pattern_data', sa.JSON(), nullable=False),
    sa.Column('suggested_fixes', sa.JSON(), nullable=True),
    sa.Column('occurrence_count', sa.Integer(), nullable=False),
    sa.Column('resolution_success_rate', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('last_seen', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('breach_incidents',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('incident_reference', sa.String(length=50), nullable=False),
    sa.Column('severity_level', sa.String(length=10), nullable=False),
    sa.Column('breach_type', sa.String(length=50), nullable=False),
    sa.Column('discovery_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('occurrence_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('affected_data_categories', sa.JSON(), nullable=False),
    sa.Column('estimated_affected_subjects', sa.Integer(), nullable=True),
    sa.Column('data_subjects_identified', sa.Boolean(), nullable=True),
    sa.Column('likelihood_of_harm', sa.String(length=10), nullable=False),
    sa.Column('severity_of_harm', sa.String(length=10), nullable=False),
    sa.Column('risk_to_rights_freedoms', sa.Text(), nullable=False),
    sa.Column('supervisory_authority_notified', sa.Boolean(), nullable=True),
    sa.Column('authority_notification_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('data_subjects_notified', sa.Boolean(), nullable=True),
    sa.Column('subjects_notification_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('containment_measures', sa.Text(), nullable=True),
    sa.Column('mitigation_measures', sa.Text(), nullable=True),
    sa.Column('lessons_learned', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('resolution_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('incident_reference')
    )
    op.create_table('data_subjects',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name_encrypted', sa.Text(), nullable=False),
    sa.Column('email_encrypted', sa.Text(), nullable=True),
    sa.Column('phone_encrypted', sa.Text(), nullable=True),
    sa.Column('address_encrypted', sa.Text(), nullable=True),
    sa.Column('data_subject_type', sa.Enum('BUSINESS_CONTACT', 'INDIVIDUAL_CONTRACTOR', 'EMPLOYEE', 'CUSTOMER_REPRESENTATIVE', name='datasubjecttype'), nullable=False),
    sa.Column('source_system', sa.String(length=100), nullable=False),
    sa.Column('consent_given', sa.Boolean(), nullable=True),
    sa.Column('consent_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('consent_withdrawn', sa.Boolean(), nullable=True),
    sa.Column('consent_withdrawal_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('processing_purposes', sa.JSON(), nullable=False),
    sa.Column('data_categories', sa.JSON(), nullable=False),
    sa.Column('retention_status', sa.Enum('ACTIVE', 'RETENTION_PERIOD', 'SCHEDULED_DELETION', 'DELETED', 'LEGAL_HOLD', name='retentionstatus'), nullable=True),
    sa.Column('retention_until', sa.DateTime(timezone=True), nullable=True),
    sa.Column('legal_basis', sa.String(length=100), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('retention_policies',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('retention_period_months', sa.Integer(), nullable=False),
    sa.Column('deletion_grace_period_days', sa.Integer(), nullable=True),
    sa.Column('applies_to_data_categories', sa.JSON(), nullable=False),
    sa.Column('applies_to_processing_purposes', sa.JSON(), nullable=False),
    sa.Column('legal_basis', sa.Text(), nullable=False),
    sa.Column('jurisdiction', sa.String(length=10), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('effective_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('review_templates',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('template_type', sa.String(length=50), nullable=False),
    sa.Column('required_fields', sa.JSON(), nullable=False),
    sa.Column('validation_rules', sa.JSON(), nullable=False),
    sa.Column('checklist_items', sa.JSON(), nullable=False),
    sa.Column('requires_siret_validation', sa.Boolean(), nullable=True),
    sa.Column('requires_tva_validation', sa.Boolean(), nullable=True),
    sa.Column('minimum_confidence_threshold', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_default', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transfer_assessments',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('recipient_country', sa.String(length=2), nullable=False),
    sa.Column('recipient_organization', sa.String(length=100), nullable=False),
    sa.Column('transfer_mechanism', sa.String(length=50), nullable=False),
    sa.Column('risk_level', sa.String(length=10), nullable=False),
    sa.Column('risk_factors', sa.JSON(), nullable=False),
    sa.Column('mitigation_measures', sa.JSON(), nullable=False),
    sa.Column('scc_version', sa.String(length=20), nullable=True),
    sa.Column('adequacy_decision_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('assessment_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('assessor_id', sa.UUID(), nullable=True),
    sa.Column('next_review_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('is_approved', sa.Boolean(), nullable=True),
    sa.Column('approval_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('approved_by', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['approved_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['assessor_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('consent_records',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('data_subject_id', sa.UUID(), nullable=False),
    sa.Column('consent_purposes', sa.JSON(), nullable=False),
    sa.Column('consent_mechanism', sa.String(length=50), nullable=False),
    sa.Column('consent_text', sa.Text(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('consent_given_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('consent_withdrawn_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('withdrawal_reason', sa.Text(), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.String(length=500), nullable=True),
    sa.Column('consent_evidence', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['data_subject_id'], ['data_subjects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('invoices',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('file_hash', sa.String(length=64), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=False),
    sa.Column('mime_type', sa.String(length=100), nullable=False),
    sa.Column('encrypted_storage_path', sa.Text(), nullable=True),
    sa.Column('encryption_key_id', sa.String(length=255), nullable=True),
    sa.Column('processing_status', sa.String(length=20), nullable=True),
    sa.Column('processing_started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('processing_completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('extracted_data_encrypted', sa.Text(), nullable=True),
    sa.Column('legal_basis', sa.String(length=100), nullable=False),
    sa.Column('processing_purposes', sa.JSON(), nullable=False),
    sa.Column('data_controller_id', sa.UUID(), nullable=False),
    sa.Column('retention_policy_id', sa.UUID(), nullable=True),
    sa.Column('retention_until', sa.DateTime(timezone=True), nullable=True),
    sa.Column('retention_status', sa.Enum('ACTIVE', 'RETENTION_PERIOD', 'SCHEDULED_DELETION', 'DELETED', 'LEGAL_HOLD', name='retentionstatus'), nullable=True),
    sa.Column('transferred_to_third_country', sa.Boolean(), nullable=True),
    sa.Column('transfer_mechanism', sa.String(length=50), nullable=True),
    sa.Column('transfer_risk_assessment_id', sa.UUID(), nullable=True),
    sa.Column('review_status', sa.String(length=50), nullable=True),
    sa.Column('review_started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('reviewed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('reviewed_by', sa.UUID(), nullable=True),
    sa.Column('approved_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('approved_by', sa.UUID(), nullable=True),
    sa.Column('fields_modified_count', sa.Integer(), nullable=True),
    sa.Column('processing_source', sa.String(length=20), nullable=True),
    sa.Column('batch_id', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['approved_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['data_controller_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['retention_policy_id'], ['retention_policies.id'], ),
    sa.ForeignKeyConstraint(['reviewed_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['transfer_risk_assessment_id'], ['transfer_assessments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('audit_logs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('event_type', sa.Enum('DATA_ACCESS', 'DATA_MODIFICATION', 'DATA_DELETION', 'DATA_EXPORT', 'CONSENT_GIVEN', 'CONSENT_WITHDRAWN', 'BREACH_DETECTED', 'RETENTION_POLICY_APPLIED', name='auditeventtype'), nullable=False),
    sa.Column('event_description', sa.Text(), nullable=False),
    sa.Column('event_timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('user_ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.String(length=500), nullable=True),
    sa.Column('session_id', sa.String(length=100), nullable=True),
    sa.Column('data_subject_id', sa.UUID(), nullable=True),
    sa.Column('invoice_id', sa.UUID(), nullable=True),
    sa.Column('processing_purpose', sa.String(length=100), nullable=True),
    sa.Column('legal_basis', sa.String(length=100), nullable=True),
    sa.Column('data_categories_accessed', sa.JSON(), nullable=True),
    sa.Column('system_component', sa.String(length=50), nullable=False),
    sa.Column('operation_details', sa.JSON(), nullable=True),
    sa.Column('risk_level', sa.String(length=10), nullable=True),
    sa.Column('compliance_notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['data_subject_id'], ['data_subjects.id'], ),
    sa.ForeignKeyConstraint(['invoice_id'], ['invoices.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cost_tracking',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('provider', sa.String(), nullable=False),
    sa.Column('processing_type', sa.String(), nullable=False),
    sa.Column('tokens_used', sa.Integer(), nullable=True),
    sa.Column('estimated_cost_usd', sa.Float(), nullable=True),
    sa.Column('estimated_cost_eur', sa.Float(), nullable=True),
    sa.Column('invoice_count', sa.Integer(), nullable=True),
    sa.Column('pages_processed', sa.Integer(), nullable=True),
    sa.Column('file_size_mb', sa.Float(), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('invoice_id', sa.UUID(), nullable=True),
    sa.Column('batch_id', sa.String(), nullable=True),
    sa.Column('processing_successful', sa.Boolean(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('processing_duration_seconds', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['invoice_id'], ['invoices.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('french_compliance_validations',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('invoice_id', sa.UUID(), nullable=False),
    sa.Column('validation_timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('siren_number', sa.String(length=9), nullable=True),
    sa.Column('siren_is_valid', sa.Boolean(), nullable=True),
    sa.Column('siren_validation_source', sa.String(length=20), nullable=True),
    sa.Column('siren_company_name', sa.Text(), nullable=True),
    sa.Column('siren_legal_form', sa.String(length=100), nullable=True),
    sa.Column('siren_naf_code', sa.String(length=10), nullable=True),
    sa.Column('siren_creation_date', sa.Date(), nullable=True),
    sa.Column('siret_number', sa.String(length=14), nullable=True),
    sa.Column('siret_is_valid', sa.Boolean(), nullable=True),
    sa.Column('siret_establishment_active', sa.Boolean(), nullable=True),
    sa.Column('siret_is_headquarters', sa.Boolean(), nullable=True),
    sa.Column('siret_address_complete', sa.Text(), nullable=True),
    sa.Column('siret_postal_code', sa.String(length=5), nullable=True),
    sa.Column('siret_city', sa.String(length=100), nullable=True),
    sa.Column('tva_number', sa.String(length=15), nullable=True),
    sa.Column('tva_is_valid', sa.Boolean(), nullable=True),
    sa.Column('tva_validation_method', sa.String(length=20), nullable=True),
    sa.Column('tva_rate_expected', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('tva_rate_found', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('tva_calculation_valid', sa.Boolean(), nullable=True),
    sa.Column('tva_amount_expected', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('tva_amount_found', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('invoice_sequence_number', sa.String(length=50), nullable=True),
    sa.Column('sequence_is_valid', sa.Boolean(), nullable=True),
    sa.Column('sequence_gaps_detected', sa.JSON(), nullable=True),
    sa.Column('sequence_series', sa.String(length=20), nullable=True),
    sa.Column('sequence_year', sa.Integer(), nullable=True),
    sa.Column('mandatory_fields_score', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('mandatory_fields_missing', sa.JSON(), nullable=True),
    sa.Column('mandatory_fields_invalid', sa.JSON(), nullable=True),
    sa.Column('overall_compliance_score', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('business_validation_score', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('legal_requirements_score', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('export_readiness_score', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('validation_errors', sa.JSON(), nullable=True),
    sa.Column('validation_warnings', sa.JSON(), nullable=True),
    sa.Column('validation_suggestions', sa.JSON(), nullable=True),
    sa.Column('validation_duration_ms', sa.Integer(), nullable=True),
    sa.Column('api_calls_made', sa.Integer(), nullable=True),
    sa.Column('cache_hits', sa.Integer(), nullable=True),
    sa.Column('validation_triggered_by', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['invoice_id'], ['invoices.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('invoice_data_subjects',
    sa.Column('invoice_id', sa.UUID(), nullable=False),
    sa.Column('data_subject_id', sa.UUID(), nullable=False),
    sa.Column('role_in_invoice', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['data_subject_id'], ['data_subjects.id'], ),
    sa.ForeignKeyConstraint(['invoice_id'], ['invoices.id'], ),
    sa.PrimaryKeyConstraint('invoice_id', 'data_subject_id')
    )
    op.create_table('invoice_field_edits',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('invoice_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('field_name', sa.String(length=255), nullable=False),
    sa.Column('field_path', sa.String(length=500), nullable=True),
    sa.Column('original_value', sa.Text(), nullable=True),
    sa.Column('new_value', sa.Text(), nullable=True),
    sa.Column('previous_value', sa.Text(), nullable=True),
    sa.Column('ai_confidence', sa.Integer(), nullable=True),
    sa.Column('ai_source', sa.String(length=50), nullable=True),
    sa.Column('change_reason', sa.String(length=100), nullable=True),
    sa.Column('user_notes', sa.Text(), nullable=True),
    sa.Column('validation_status', sa.String(length=50), nullable=True),
    sa.Column('triggers_siret_revalidation', sa.Boolean(), nullable=True),
    sa.Column('triggers_tva_recalculation', sa.Boolean(), nullable=True),
    sa.Column('compliance_impact', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['invoice_id'], ['invoices.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('review_sessions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('invoice_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('session_type', sa.String(length=50), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('fields_reviewed', sa.Integer(), nullable=True),
    sa.Column('fields_modified', sa.Integer(), nullable=True),
    sa.Column('total_fields', sa.Integer(), nullable=True),
    sa.Column('completion_percentage', sa.Integer(), nullable=True),
    sa.Column('review_decision', sa.String(length=50), nullable=True),
    sa.Column('reviewer_notes', sa.Text(), nullable=True),
    sa.Column('confidence_score', sa.Integer(), nullable=True),
    sa.Column('ai_accuracy_score', sa.Integer(), nullable=True),
    sa.Column('review_duration_seconds', sa.Integer(), nullable=True),
    sa.Column('started_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_activity_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['invoice_id'], ['invoices.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('siret_validation_records',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('invoice_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('extracted_siret', sa.String(length=14), nullable=False),
    sa.Column('cleaned_siret', sa.String(length=14), nullable=True),
    sa.Column('corrected_siret', sa.String(length=14), nullable=True),
    sa.Column('validation_status', sa.String(), nullable=False),
    sa.Column('blocking_level', sa.String(), nullable=False),
    sa.Column('compliance_risk', sa.String(), nullable=False),
    sa.Column('insee_response', sa.JSON(), nullable=True),
    sa.Column('insee_company_name', sa.String(length=255), nullable=True),
    sa.Column('insee_company_status', sa.String(length=50), nullable=True),
    sa.Column('insee_activity_code', sa.String(length=10), nullable=True),
    sa.Column('insee_closure_date', sa.DateTime(), nullable=True),
    sa.Column('extracted_company_name', sa.String(length=255), nullable=True),
    sa.Column('name_similarity_score', sa.Integer(), nullable=True),
    sa.Column('user_action', sa.String(), nullable=True),
    sa.Column('user_justification', sa.Text(), nullable=True),
    sa.Column('override_timestamp', sa.DateTime(), nullable=True),
    sa.Column('export_blocked', sa.Boolean(), nullable=True),
    sa.Column('export_warnings', sa.JSON(), nullable=True),
    sa.Column('export_notes', sa.Text(), nullable=True),
    sa.Column('liability_warning_shown', sa.Boolean(), nullable=True),
    sa.Column('liability_warning_acknowledged', sa.Boolean(), nullable=True),
    sa.Column('compliance_notes', sa.Text(), nullable=True),
    sa.Column('auto_correction_attempted', sa.Boolean(), nullable=True),
    sa.Column('auto_correction_success', sa.Boolean(), nullable=True),
    sa.Column('validation_attempt_count', sa.Integer(), nullable=True),
    sa.Column('last_validation_error', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['invoice_id'], ['invoices.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('insee_api_calls',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('invoice_id', sa.UUID(), nullable=True),
    sa.Column('validation_id', sa.UUID(), nullable=True),
    sa.Column('endpoint', sa.String(length=100), nullable=False),
    sa.Column('request_identifier', sa.String(length=20), nullable=False),
    sa.Column('request_method', sa.String(length=10), nullable=False),
    sa.Column('response_status', sa.Integer(), nullable=True),
    sa.Column('response_data', sa.JSON(), nullable=True),
    sa.Column('response_time_ms', sa.Integer(), nullable=True),
    sa.Column('rate_limit_remaining', sa.Integer(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['invoice_id'], ['invoices.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['validation_id'], ['french_compliance_validations.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tva_validation_history',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('invoice_id', sa.UUID(), nullable=False),
    sa.Column('validation_id', sa.UUID(), nullable=True),
    sa.Column('line_item_index', sa.Integer(), nullable=False),
    sa.Column('product_description', sa.Text(), nullable=False),
    sa.Column('unit_price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('quantity', sa.Numeric(precision=10, scale=3), nullable=False),
    sa.Column('total_amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('declared_tva_rate', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('detected_category_id', sa.UUID(), nullable=True),
    sa.Column('suggested_tva_rate', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('actual_tva_amount', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('calculated_tva_amount', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('rate_is_correct', sa.Boolean(), nullable=True),
    sa.Column('calculation_is_correct', sa.Boolean(), nullable=True),
    sa.Column('confidence_score', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('validation_errors', sa.JSON(), nullable=True),
    sa.Column('validation_warnings', sa.JSON(), nullable=True),
    sa.Column('manual_override', sa.Boolean(), nullable=False),
    sa.Column('correct_category_id', sa.UUID(), nullable=True),
    sa.Column('correct_tva_rate', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('feedback_provided', sa.Boolean(), nullable=False),
    sa.Column('validated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('validated_by', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['correct_category_id'], ['tva_product_categories.id'], ),
    sa.ForeignKeyConstraint(['detected_category_id'], ['tva_product_categories.id'], ),
    sa.ForeignKeyConstraint(['invoice_id'], ['invoices.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['validation_id'], ['french_compliance_validations.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_tva_history_category', 'tva_validation_history', ['detected_category_id'], unique=False)
    op.create_index('idx_tva_history_date', 'tva_validation_history', ['validated_at'], unique=False)
    op.create_index('idx_tva_history_invoice', 'tva_validation_history', ['invoice_id'], unique=False)
    op.create_index('idx_tva_history_rate', 'tva_validation_history', ['declared_tva_rate'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_tva_history_rate', table_name='tva_validation_history')
    op.drop_index('idx_tva_history_invoice', table_name='tva_validation_history')
    op.drop_index('idx_tva_history_date', table_name='tva_validation_history')
    op.drop_index('idx_tva_history_category', table_name='tva_validation_history')
    op.drop_table('tva_validation_history')
    op.drop_table('insee_api_calls')
    op.drop_table('siret_validation_records')
    op.drop_table('review_sessions')
    op.drop_table('invoice_field_edits')
    op.drop_table('invoice_data_subjects')
    op.drop_table('french_compliance_validations')
    op.drop_table('cost_tracking')
    op.drop_table('audit_logs')
    op.drop_table('invoices')
    op.drop_table('consent_records')
    op.drop_table('transfer_assessments')
    op.drop_table('review_templates')
    op.drop_table('retention_policies')
    op.drop_table('data_subjects')
    op.drop_table('breach_incidents')
    op.drop_table('validation_error_patterns')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index('idx_tva_rate_type', table_name='tva_rate_history')
    op.drop_index('idx_tva_rate_effective', table_name='tva_rate_history')
    op.drop_table('tva_rate_history')
    op.drop_index('idx_tva_category_rate', table_name='tva_product_categories')
    op.drop_index('idx_tva_category_level', table_name='tva_product_categories')
    op.drop_index('idx_tva_category_active', table_name='tva_product_categories')
    op.drop_table('tva_product_categories')
    op.drop_table('tva_exemption_rules')
    op.drop_table('siret_validation_settings')
    op.drop_table('siret_compliance_guidance')
    op.drop_table('plan_comptable_general')
    op.drop_table('cost_summaries')
    op.drop_table('compliance_settings')
    # ### end Alembic commands ###
