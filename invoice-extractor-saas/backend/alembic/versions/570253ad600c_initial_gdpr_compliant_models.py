"""Initial GDPR-compliant models

Revision ID: 570253ad600c
Revises: 
Create Date: 2025-07-25 14:03:07.552531

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '570253ad600c'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('company_name', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('breach_incidents',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('incident_reference', sa.String(length=50), nullable=False),
    sa.Column('severity_level', sa.String(length=10), nullable=False),
    sa.Column('breach_type', sa.String(length=50), nullable=False),
    sa.Column('discovery_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('occurrence_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('affected_data_categories', sa.JSON(), nullable=False),
    sa.Column('estimated_affected_subjects', sa.Integer(), nullable=True),
    sa.Column('data_subjects_identified', sa.Boolean(), nullable=True),
    sa.Column('likelihood_of_harm', sa.String(length=10), nullable=False),
    sa.Column('severity_of_harm', sa.String(length=10), nullable=False),
    sa.Column('risk_to_rights_freedoms', sa.Text(), nullable=False),
    sa.Column('supervisory_authority_notified', sa.Boolean(), nullable=True),
    sa.Column('authority_notification_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('data_subjects_notified', sa.Boolean(), nullable=True),
    sa.Column('subjects_notification_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('containment_measures', sa.Text(), nullable=True),
    sa.Column('mitigation_measures', sa.Text(), nullable=True),
    sa.Column('lessons_learned', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('resolution_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('incident_reference')
    )
    op.create_table('data_subjects',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name_encrypted', sa.Text(), nullable=False),
    sa.Column('email_encrypted', sa.Text(), nullable=True),
    sa.Column('phone_encrypted', sa.Text(), nullable=True),
    sa.Column('address_encrypted', sa.Text(), nullable=True),
    sa.Column('data_subject_type', sa.Enum('BUSINESS_CONTACT', 'INDIVIDUAL_CONTRACTOR', 'EMPLOYEE', 'CUSTOMER_REPRESENTATIVE', name='datasubjecttype'), nullable=False),
    sa.Column('source_system', sa.String(length=100), nullable=False),
    sa.Column('consent_given', sa.Boolean(), nullable=True),
    sa.Column('consent_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('consent_withdrawn', sa.Boolean(), nullable=True),
    sa.Column('consent_withdrawal_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('processing_purposes', sa.JSON(), nullable=False),
    sa.Column('data_categories', sa.JSON(), nullable=False),
    sa.Column('retention_status', sa.Enum('ACTIVE', 'RETENTION_PERIOD', 'SCHEDULED_DELETION', 'DELETED', 'LEGAL_HOLD', name='retentionstatus'), nullable=True),
    sa.Column('retention_until', sa.DateTime(timezone=True), nullable=True),
    sa.Column('legal_basis', sa.String(length=100), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('retention_policies',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('retention_period_months', sa.Integer(), nullable=False),
    sa.Column('deletion_grace_period_days', sa.Integer(), nullable=True),
    sa.Column('applies_to_data_categories', sa.JSON(), nullable=False),
    sa.Column('applies_to_processing_purposes', sa.JSON(), nullable=False),
    sa.Column('legal_basis', sa.Text(), nullable=False),
    sa.Column('jurisdiction', sa.String(length=10), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('effective_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transfer_assessments',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('recipient_country', sa.String(length=2), nullable=False),
    sa.Column('recipient_organization', sa.String(length=100), nullable=False),
    sa.Column('transfer_mechanism', sa.String(length=50), nullable=False),
    sa.Column('risk_level', sa.String(length=10), nullable=False),
    sa.Column('risk_factors', sa.JSON(), nullable=False),
    sa.Column('mitigation_measures', sa.JSON(), nullable=False),
    sa.Column('scc_version', sa.String(length=20), nullable=True),
    sa.Column('adequacy_decision_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('assessment_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('assessor_id', sa.UUID(), nullable=True),
    sa.Column('next_review_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('is_approved', sa.Boolean(), nullable=True),
    sa.Column('approval_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('approved_by', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['approved_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['assessor_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('consent_records',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('data_subject_id', sa.UUID(), nullable=False),
    sa.Column('consent_purposes', sa.JSON(), nullable=False),
    sa.Column('consent_mechanism', sa.String(length=50), nullable=False),
    sa.Column('consent_text', sa.Text(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('consent_given_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('consent_withdrawn_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('withdrawal_reason', sa.Text(), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.String(length=500), nullable=True),
    sa.Column('consent_evidence', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['data_subject_id'], ['data_subjects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('invoices',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('file_hash', sa.String(length=64), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=False),
    sa.Column('mime_type', sa.String(length=100), nullable=False),
    sa.Column('encrypted_storage_path', sa.Text(), nullable=True),
    sa.Column('encryption_key_id', sa.String(length=255), nullable=True),
    sa.Column('processing_status', sa.String(length=20), nullable=True),
    sa.Column('processing_started_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('processing_completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('extracted_data_encrypted', sa.Text(), nullable=True),
    sa.Column('legal_basis', sa.String(length=100), nullable=False),
    sa.Column('processing_purposes', sa.JSON(), nullable=False),
    sa.Column('data_controller_id', sa.UUID(), nullable=False),
    sa.Column('retention_policy_id', sa.UUID(), nullable=True),
    sa.Column('retention_until', sa.DateTime(timezone=True), nullable=True),
    sa.Column('retention_status', sa.Enum('ACTIVE', 'RETENTION_PERIOD', 'SCHEDULED_DELETION', 'DELETED', 'LEGAL_HOLD', name='retentionstatus'), nullable=True),
    sa.Column('transferred_to_third_country', sa.Boolean(), nullable=True),
    sa.Column('transfer_mechanism', sa.String(length=50), nullable=True),
    sa.Column('transfer_risk_assessment_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['data_controller_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['retention_policy_id'], ['retention_policies.id'], ),
    sa.ForeignKeyConstraint(['transfer_risk_assessment_id'], ['transfer_assessments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('audit_logs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('event_type', sa.Enum('DATA_ACCESS', 'DATA_MODIFICATION', 'DATA_DELETION', 'DATA_EXPORT', 'CONSENT_GIVEN', 'CONSENT_WITHDRAWN', 'BREACH_DETECTED', 'RETENTION_POLICY_APPLIED', name='auditeventtype'), nullable=False),
    sa.Column('event_description', sa.Text(), nullable=False),
    sa.Column('event_timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('user_ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.String(length=500), nullable=True),
    sa.Column('session_id', sa.String(length=100), nullable=True),
    sa.Column('data_subject_id', sa.UUID(), nullable=True),
    sa.Column('invoice_id', sa.UUID(), nullable=True),
    sa.Column('processing_purpose', sa.String(length=100), nullable=True),
    sa.Column('legal_basis', sa.String(length=100), nullable=True),
    sa.Column('data_categories_accessed', sa.JSON(), nullable=True),
    sa.Column('system_component', sa.String(length=50), nullable=False),
    sa.Column('operation_details', sa.JSON(), nullable=True),
    sa.Column('risk_level', sa.String(length=10), nullable=True),
    sa.Column('compliance_notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['data_subject_id'], ['data_subjects.id'], ),
    sa.ForeignKeyConstraint(['invoice_id'], ['invoices.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('invoice_data_subjects',
    sa.Column('invoice_id', sa.UUID(), nullable=False),
    sa.Column('data_subject_id', sa.UUID(), nullable=False),
    sa.Column('role_in_invoice', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['data_subject_id'], ['data_subjects.id'], ),
    sa.ForeignKeyConstraint(['invoice_id'], ['invoices.id'], ),
    sa.PrimaryKeyConstraint('invoice_id', 'data_subject_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('invoice_data_subjects')
    op.drop_table('audit_logs')
    op.drop_table('invoices')
    op.drop_table('consent_records')
    op.drop_table('transfer_assessments')
    op.drop_table('retention_policies')
    op.drop_table('data_subjects')
    op.drop_table('breach_incidents')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
